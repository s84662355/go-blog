{"remainingRequest":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/babel-loader/lib/index.js!/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/src/views/system/menu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/src/views/system/menu/index.vue","mtime":1608023738749},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _menu = require(\"@/api/menu\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultMenu = {\n  id: '',\n  name: '',\n  path: '',\n  component: '',\n  redirect: '',\n  url: '',\n  meta_title: '',\n  meta_icon: '#',\n  meta_nocache: true,\n  alwaysshow: true,\n  meta_affix: false,\n  hidden: false,\n  pid: 0,\n  sort: '0',\n  status: true\n};\nvar _default = {\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        1: 'success',\n        0: 'info'\n      };\n      return statusMap[status];\n    },\n    statusNameFilter: function statusNameFilter(status) {\n      var statusMap = {\n        1: '启动',\n        0: '停止'\n      };\n      return statusMap[status];\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateRequire = function validateRequire(rule, value, callback) {\n      if (value === '') {\n        _this.$message({\n          message: rule.field + '为必填项',\n          type: 'error'\n        });\n\n        callback(new Error(rule.field + '为必填项'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      Menu: Object.assign({}, defaultMenu),\n      routes: [],\n      MenusList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      rules: {\n        name: [{\n          validator: validateRequire\n        }],\n        path: [{\n          validator: validateRequire\n        }],\n        component: [{\n          validator: validateRequire\n        }],\n        url: [{\n          validator: validateRequire\n        }]\n      },\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      }\n    };\n  },\n  computed: {\n    routesData: function routesData() {\n      return this.routes;\n    }\n  },\n  created: function created() {\n    // Mock: get all routes and Menus list from server\n    this.getMenus();\n  },\n  methods: {\n    getMenus: function () {\n      var _getMenus2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _menu.getMenus)();\n\n              case 2:\n                res = _context.sent;\n                this.MenusList = res.data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getMenus() {\n        return _getMenus2.apply(this, arguments);\n      }\n\n      return getMenus;\n    }(),\n    handleAddMenu: function handleAddMenu(scope) {\n      var _this2 = this;\n\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n      this.Menu.pid = scope.row ? scope.row.id : 0;\n      this.$nextTick(function () {\n        _this2.$refs['formData'].clearValidate();\n\n        _this2.$refs['formData'].resetFields();\n\n        _this2.Menu.status = true;\n      });\n    },\n    handleEdit: function handleEdit(scope) {\n      var _this3 = this;\n\n      this.dialogType = 'edit';\n      this.dialogVisible = true;\n      this.checkStrictly = true;\n      this.Menu = (0, _utils.deepClone)(scope.row);\n      this.Menu.status = this.Menu.status === 1 ? true : false;\n      this.Menu.meta_nocache = this.Menu.meta_nocache === 1 ? true : false;\n      this.Menu.hidden = this.Menu.hidden === 1 ? true : false;\n      this.Menu.alwaysshow = this.Menu.alwaysshow === 1 ? true : false;\n      this.$nextTick(function () {\n        _this3.$refs['formData'].clearValidate();\n      });\n    },\n    handleDelete: function handleDelete(_ref) {\n      var _this4 = this;\n\n      var $index = _ref.$index,\n          row = _ref.row;\n      this.$confirm('Confirm to remove the Menu?', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var index;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _menu.deleteMenu)(row.id);\n\n              case 2:\n                index = 0;\n\n              case 3:\n                if (!(index < _this4.MenusList.length)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                if (!(_this4.MenusList[index].id === row.id)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                row.status = 0;\n\n                _this4.MenusList.splice(index, 1, Object.assign({}, row));\n\n                return _context2.abrupt(\"break\", 11);\n\n              case 8:\n                index++;\n                _context2.next = 3;\n                break;\n\n              case 11:\n                // this.MenusList.splice($index, 1)\n                _this4.$message({\n                  type: 'success',\n                  message: 'Delete succed!'\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    },\n    confirmMenu: function confirmMenu() {\n      var _this5 = this;\n\n      var isEdit = this.dialogType === 'edit';\n      this.$refs['formData'].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        if (isEdit) {\n          _this5.Menu.sort = String(_this5.Menu.sort);\n          (0, _menu.updateMenu)(_this5.Menu.id, _this5.Menu).then(function (response) {\n            for (var index = 0; index < _this5.MenusList.length; index++) {\n              if (_this5.MenusList[index].id === _this5.Menu.id) {\n                _this5.Menu.status = _this5.Menu.status ? 1 : 0;\n\n                _this5.MenusList.splice(index, 1, Object.assign({}, _this5.Menu));\n\n                break;\n              }\n            }\n\n            var _this5$Menu = _this5.Menu,\n                path = _this5$Menu.path,\n                id = _this5$Menu.id,\n                name = _this5$Menu.name;\n            _this5.dialogVisible = false;\n\n            _this5.$notify({\n              title: 'Success',\n              dangerouslyUseHTMLString: true,\n              message: \"\\n          <div>Menu Id: \".concat(id, \"</div>\\n          <div>Menu Name: \").concat(name, \"</div>\\n          <div>path: \").concat(path, \"</div>\\n        \"),\n              type: 'success'\n            });\n          }).catch(function (err) {\n            console.log(err);\n          });\n        } else {\n          (0, _menu.addMenu)(_this5.Menu).then(function (response) {\n            _this5.Menu.id = response.data.id;\n            _this5.Menu.status = response.data.status === 1 ? 1 : 0;\n            _this5.Menu.level = _this5.Menu.level + 1;\n\n            _this5.MenusList.push(_this5.Menu);\n\n            var _this5$Menu2 = _this5.Menu,\n                path = _this5$Menu2.path,\n                id = _this5$Menu2.id,\n                name = _this5$Menu2.name;\n            _this5.dialogVisible = false;\n\n            _this5.$notify({\n              title: 'Success',\n              dangerouslyUseHTMLString: true,\n              message: \"\\n          <div>Menu Id: \".concat(id, \"</div>\\n          <div>Menu Name: \").concat(name, \"</div>\\n          <div>path: \").concat(path, \"</div>\\n        \"),\n              type: 'success'\n            });\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}