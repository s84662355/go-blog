{"remainingRequest":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/src/views/articles的副本/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/src/views/articles的副本/list/index.vue","mtime":1608620386753},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenjiahao/GoDemo/go-blog/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {articleList, cateList,fetchList } from '@/api/article'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\n\nconst statusMap = [\n  {value:1,name:'发布'},\n  {value:0,name:'未发布'}\n]\n \nexport default {\n  name: 'ArticleList',\n  directives: { waves },\n  components: { Pagination },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        1: 'success',\n        0: 'info',\n        10: 'danger'\n      }\n      return statusMap[status]\n    },\n    statusNameFilter(status) {\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        importance: undefined,\n        title: undefined,\n        status: undefined,\n        dateValue: '',\n        cate_id:''\n      },\n      importanceOptions: [1, 2, 3],\n      statusMap,\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      downloadLoading: false,\n       catelistData:[],\n    }\n  },\n  created() {\n    this.getList()\n \n    cateList().then(response => {\n          this.catelistData  =   response.data \n         \n    })\n  },\n  methods: {\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    resetTemp() {\n      this.temp = {\n        id: undefined,\n        importance: 1,\n        remark: '',\n        timestamp: new Date(),\n        title: '',\n        status: 'published',\n        type: ''\n      }\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['display_time', 'title', 'importance', 'status']\n        const filterVal = ['display_time', 'title', 'importance', 'status']\n        const data = this.formatJson(filterVal, this.list)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    getList() {\n      this.listLoading = true\n\n\n/*\n      fetchList(this.listQuery).then(response => {\n         this.list = response.data.items\n         this.total = response.data.total\n         this.listLoading = false\n      })\n*/\n\n \n \n\n      articleList(this.listQuery).then(response => {\n         this.list = response.data.list\n        this.listLoading = false\n         this.total = response.data.paginator.total\n      })\n\n\n    }\n  }\n}\n",null]}